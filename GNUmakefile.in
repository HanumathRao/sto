# @configure_input@

AR = ar
CC = @CC@
CXX = @CXX@
CFLAGS = -W -Wall
DEPSDIR := .deps
DEPCFLAGS = -MD -MF $(DEPSDIR)/$*.d -MP
LIBS = @LIBS@ -lpthread -lm
LDFLAGS = @LDFLAGS@

ifeq ($(PROFILE),1)
CFLAGS += -g -pg -fno-inline
endif

ifneq ($(OPT),0)
CFLAGS += -O3
endif

# debugging on by default
ifneq ($(NDEBUG),1)
CFLAGS += -g
endif

all: concurrent single

%.o: %.c config.h $(DEPSDIR)/stamp
	$(CXX) $(CFLAGS) $(DEPCFLAGS) -include config.h -c -o $@ $<

%.o: %.cc config.h $(DEPSDIR)/stamp
	$(CXX) $(CFLAGS) $(DEPCFLAGS) -include config.h -c -o $@ $<

%.S: %.o
	objdump -S $< > $@

libjson.a: json.o string.o straccum.o str.o msgpack.o \
	clp.o kvrandom.o compiler.o kvthread.o
	@/bin/rm -f $@
	$(AR) cru $@ $^

KVTREES = ../query_masstree.o \
	../value_string.o ../value_array.o ../value_versioned_array.o \
	../string_slice.o

concurrent: concurrent.o clp.o ../kvio.o ../libjson.a ../misc.o ../checkpoint.o $(KVTREES)
	$(CXX) $(CFLAGS) -o $@ $^ $(LDFLAGS) $(LIBS)

single: single.o
	$(CXX) $(CFLAGS) -o $@ $^ $(LDFLAGS) $(LIBS)

config.h: stamp-h

GNUmakefile: GNUmakefile.in config.status
	CONFIG_FILES=$@ CONFIG_HEADERS= $(SHELL) ./config.status

configure config.h.in: configure.ac
	autoreconf -i
	touch config.h.in

config.status: configure
	./configure @ac_configure_args@

$(DEPSDIR)/stamp:
	mkdir -p $(DEPSDIR)
	touch $@

stamp-h: config.h.in config.status
	CONFIG_FILES= $(SHELL) ./config.status
	echo > stamp-h

clean:
	rm -f concurrent *.o libjson.a
	rm -rf .deps

DEPFILES := $(wildcard $(DEPSDIR)/*.d)
ifneq ($(DEPFILES),)
include $(DEPFILES)
endif

.PHONY: clean all
